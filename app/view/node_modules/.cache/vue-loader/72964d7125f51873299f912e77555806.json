{"remainingRequest":"/home/rahul/Documents/devops/app/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rahul/Documents/devops/app/view/src/components/ListModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rahul/Documents/devops/app/view/src/components/ListModal.vue","mtime":1538868716106},{"path":"/home/rahul/Documents/devops/app/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rahul/Documents/devops/app/view/node_modules/cache-loader/dist/cjs.js","mtime":1538835835253},{"path":"/home/rahul/Documents/devops/app/view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n  props:[\"message\"],\n  data(){\n      return{\n          palindrome:'',\n          loading:false\n      }\n  },\n  methods: {\n    showModal () {\n      this.$refs.myModalRef.show()\n    },\n    hideModal () {\n      this.$refs.myModalRef.hide()\n    },\n    hidden(){\n      this.palindrome=''\n    },\n    checkPalindrome(){\n        this.loading=true;\n      var url=\"/api/v1/palindrome/\"+this.message._id\n      axios.get(url)\n        .then(function(response){\n            var status=response.data.status\n            if(status)\n                this.palindrome=\" Palindrome \"\n            else{\n                this.palindrome= \" Not Palindrome \"\n            }\n            this.loading=false;\n        }.bind(this))\n    },\n    Delete(event){\n        var url=\"/api/v1/message/\"+this.message._id\n        this.$store.dispatch(\"deleteMessage\",this.message._id)\n        axios.delete(url).then(function(response){\n\n        }.bind(this))\n        event.stopPropagation();\n    }\n  },\n  mounted:function(){\n\n  }\n}\n",{"version":3,"sources":["ListModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ListModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <b-list-group-item @click=\"showModal\" href=\"#\">\n        {{message.message}}\n\n            <b-button size=\"md\" variant=\"link\" class=\"float-right\" @click=\"Delete($event)\">\n                Delete\n            </b-button>\n\n        <b-modal ref=\"myModalRef\" centered title=\"Details\" no-close-on-backdrop=\"true\" @hidden=\"hidden\">\n            <p class=\"my-4\">{{message.message}}</p>\n            <div slot=\"modal-footer\" class=\"w-100\">\n\n                <img v-if=\"loading\" class=\"float-left\" src=\"./../assets/tenor.gif\" alt=\"Loading...\" style=\"height:40px;width:70px;\">\n                <b-badge variant=\"primary\" pill class=\"float-left\" v-if=\"!loading\">{{palindrome}}</b-badge>\n                <b-btn size=\"md\" class=\"float-right\" variant=\"primary\" @click=\"checkPalindrome\">\n                Property\n                </b-btn>\n            </div>\n        </b-modal>\n    </b-list-group-item>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  props:[\"message\"],\n  data(){\n      return{\n          palindrome:'',\n          loading:false\n      }\n  },\n  methods: {\n    showModal () {\n      this.$refs.myModalRef.show()\n    },\n    hideModal () {\n      this.$refs.myModalRef.hide()\n    },\n    hidden(){\n      this.palindrome=''\n    },\n    checkPalindrome(){\n        this.loading=true;\n      var url=\"/api/v1/palindrome/\"+this.message._id\n      axios.get(url)\n        .then(function(response){\n            var status=response.data.status\n            if(status)\n                this.palindrome=\" Palindrome \"\n            else{\n                this.palindrome= \" Not Palindrome \"\n            }\n            this.loading=false;\n        }.bind(this))\n    },\n    Delete(event){\n        var url=\"/api/v1/message/\"+this.message._id\n        this.$store.dispatch(\"deleteMessage\",this.message._id)\n        axios.delete(url).then(function(response){\n\n        }.bind(this))\n        event.stopPropagation();\n    }\n  },\n  mounted:function(){\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}